
spring.application.name=API-GATEWAY

server.port=8083

# JWT Secret Key (this could be same in API Gateway also because token is created based on this key. So this key can only use to extract values)
jwt.secretKey = sadfghjkjytdsdvxcbnhjrerwt6t7uytreadfxcghjgiutyrtsfghjitrte

# Eureka Config
eureka.instance.prefer-ip-address=true
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

# Server use this URL to register client
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# Configure the Gateway to go all api through Gateway
# For USER-SERVICE
spring.cloud.gateway.routes[0].id=USER-SERVICE
spring.cloud.gateway.routes[0].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/auth/**

# For POST-SERVICE
spring.cloud.gateway.routes[1].id=POST-SERVICE-POST
spring.cloud.gateway.routes[1].uri=lb://POST-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/post/**
spring.cloud.gateway.routes[1].filters[0]=AuthenticationFilter

# FOR POST-SERVICE (For the LIKE Controller)
spring.cloud.gateway.routes[2].id=POST-SERVICE-LIKES
spring.cloud.gateway.routes[2].uri=lb://POST-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/likes/**
spring.cloud.gateway.routes[2].filters[0]=AuthenticationFilter

# FOR CONNECTIONS-SERVICE
spring.cloud.gateway.routes[3].id=Connections-Service
spring.cloud.gateway.routes[3].uri=lb://Connections-Service
spring.cloud.gateway.routes[3].predicates[0]=Path=/person/**
spring.cloud.gateway.routes[3].filters[0]=AuthenticationFilter